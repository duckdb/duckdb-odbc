cmake_minimum_required(VERSION 3.12.0)

project(duckdb-odbc)
find_package(ODBC)
find_package(Threads REQUIRED)

set(CMAKE_CXX_STANDARD "11" CACHE STRING "C++ standard to enforce")
set(CMAKE_VERBOSE_MAKEFILE OFF)
set(CMAKE_POSITION_INDEPENDENT_CODE ON)

if(NOT ODBC_FOUND)
  message(FATAL_ERROR "No ODBC found; you need to install unixodbc-dev.")
endif()

set(LINK_LIB_LIST "")

if(ODBC_FOUND)
  message(STATUS "ODBC library found at: " ${ODBC_LIBRARIES})
  get_filename_component(ODBC_LIB_DIR ${ODBC_LIBRARIES} DIRECTORY)
  message(STATUS "ODBC library path: " ${ODBC_LIB_DIR})
  find_library(ODBCINST_LIB NAMES odbcinst libodbcinst HINTS ${ODBC_LIB_DIR})
  if(ODBCINST_LIB)
    list(APPEND LINK_LIB_LIST ${ODBCINST_LIB})
    add_definitions(-DODBC_LINK_ODBCINST)
    message(STATUS "Found ODBCINST_LIB: " ${ODBCINST_LIB})
  endif()

  if(WIN32)
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/bin)
    add_subdirectory(winsetup)
    list(APPEND LINK_LIB_LIST $<$<PLATFORM_ID:Windows>:odbccp32>)
    list(APPEND LINK_LIB_LIST
         $<$<PLATFORM_ID:Windows>:legacy_stdio_definitions>)
  endif()
endif()

set(DUCKDB_SYSTEM_LIBS ${CMAKE_DL_LIBS})
if(MSVC)
  set(DUCKDB_SYSTEM_LIBS ${DUCKDB_SYSTEM_LIBS} ws2_32 rstrtmgr bcrypt)
endif()

if(OSX_BUILD_UNIVERSAL)
  SET(CMAKE_OSX_ARCHITECTURES "x86_64;arm64" CACHE STRING "Build architectures for Mac OS X" FORCE)
endif()

add_definitions(-DDUCKDB_BUILD_LIBRARY -DNO_FRAMEWORKS ${DEFINES})

include_directories(src/duckdb/src/include/ ${INCLUDE_FILES} ${ODBC_INCLUDE_DIRS} include)

add_subdirectory(src)

set(CORE_OBJECT_FILES ${SOURCE_FILES})

if(WIN32)
  list(APPEND ALL_OBJECT_FILES duckdb_odbc.def)
endif()

add_library(duckdb_core_obj OBJECT ${CORE_OBJECT_FILES})
target_compile_definitions(duckdb_core_obj PRIVATE -DDUCKDB_STATIC_BUILD)
set(ALL_OBJECT_FILES ${ALL_OBJECT_FILES} $<TARGET_OBJECTS:duckdb_core_obj>)

add_library(duckdb_odbc SHARED ${ALL_OBJECT_FILES})
target_compile_definitions(duckdb_odbc PRIVATE -DDUCKDB_STATIC_BUILD)

set_target_properties(duckdb_odbc PROPERTIES DEFINE_SYMBOL "DUCKDB_ODBC_API")
target_link_libraries(duckdb_odbc ${LINK_LIB_LIST} )
target_link_libraries(duckdb_odbc Threads::Threads ${DUCKDB_SYSTEM_LIBS})
if(NOT WIN32)
  if (CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
    target_link_options(duckdb_odbc PRIVATE -fvisibility=hidden -Wl,--version-script=${CMAKE_CURRENT_LIST_DIR}/duckdb_odbc.map)
  elseif(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
    target_link_options(duckdb_odbc PRIVATE -fvisibility=hidden -Wl,-exported_symbols_list,${CMAKE_CURRENT_LIST_DIR}/duckdb_odbc.exp)
  endif()
endif()

if(NOT CLANG_TIDY)
  add_subdirectory(test)
endif()
